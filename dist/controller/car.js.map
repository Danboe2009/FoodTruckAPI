{"version":3,"sources":["../../src/controller/car.js"],"names":["config","db","api","get","req","res","Car","find","err","car","send","json","FoodTruck","findById","params","id","foodtruck","post","authenticate","newCar","body","model","price","lastprice","save","message","delete","status","remove","_id","put"],"mappings":"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","file":"car.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Car from '../model/car';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/car' - GET all food trucks\n  api.get('/', (req, res) => {\n    Car.find({}, (err, car) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(car);\n    });\n  });\n\n  // '/v1/car/:id' - GET a specific food truck\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // '/v1/car/add' - POST - add a food truck\n  api.post('/add', authenticate, (req, res) => {\n    let newCar = new Car();\n    newCar.car = req.body.car;\n    newCar.model = req.body.model;\n    newCar.price = req.body.price;\n    newCar.lastprice = req.body.lastprice;\n\n    newCar.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Car created successfully' });\n    });\n  });\n\n  // '/v1/car/:id' - DELETE - remove a food truck\n  api.delete('/:id', authenticate, (req, res) => {\n    Car.findById(req.params.id, (err, car) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (car === null) {\n        res.status(404).send(\"Car Not Found\")\n        return;\n      }\n      Car.remove({\n        _id: req.params.id\n      }, (err, car) => {\n        if (err) {\n          res.status(500).send(err);\n          return;\n        }res.json({message: \"Car Successfully Removed\"});\n        });\n      });\n    });\n\n  // '/v1/car/:id' - PUT - update an existing record\n  api.put('/:id', authenticate, (req, res) => {\n    Car.findById(req.params.id, (err, car) => {\n      if (err) {\n        res.send(err);\n      }\n      car.car = req.body.car;\n      car.model = req.body.model;\n      car.price = req.body.price;\n      car.lastprice = req.body.lastprice;\n      car.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Car info updated' });\n      });\n    });\n  });\n\n  return api;\n}\n"]}
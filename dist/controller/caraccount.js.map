{"version":3,"sources":["../../src/controller/caraccount.js"],"names":["config","db","api","get","req","res","status","send","user","Account","find","err","accounts","json","post","register","username","body","email","password","account","name","console","log","passport","authenticate","session","scope","generateAccessToken","respond","logout"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAMJ,IAAII,IAAZ,EAArB;AACD,GAFD;;AAIA;AACAN,MAAIC,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BI,yBAAQC,IAAR,CAAa,EAAb,EAAiB,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAClC,UAAID,GAAJ,EAAS;AACPJ,aAAKI,GAAL;AACD;AACDN,UAAIQ,IAAJ,CAASD,QAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAV,MAAIY,IAAJ,CAAS,WAAT,EAAsB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAClCI,yBAAQM,QAAR,CAAiB,IAAIN,oBAAJ,CAAY,EAAEO,UAAUZ,IAAIa,IAAJ,CAASC,KAArB,EAAZ,CAAjB,EAA2Dd,IAAIa,IAAJ,CAASE,QAApE,EAA8E,UAASR,GAAT,EAAcS,OAAd,EAAuB;AACnG,UAAIT,GAAJ,EAAS;AACP,YAAIA,IAAIU,IAAJ,KAAa,iBAAjB,EAAoC;AAClCC,kBAAQC,GAAR,CAAY,aAAZ;AACA,iBAAOlB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,GAArB,CAAP;AACD,SAHD,MAGO;AACL,iBAAON,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBI,GAArB,CAAP;AACD;AACF;;AAEDa,yBAASC,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGGtB,GAHH,EAGQC,GAHR,EAGa,YAAM;AACjBA,YAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kCAArB;AACD,OALD;AAMD,KAhBD;AAiBD,GAlBD;;AAoBA;AACAL,MAAIY,IAAJ,CAAS,QAAT,EAAmBU,mBAASC,YAAT,CACjB,OADiB,EACR;AACPC,aAAS,KADF;AAEPC,WAAO;AAFA,GADQ,CAAnB,EAIMC,mCAJN,EAI2BC,uBAJ3B;;AAMA;AACA3B,MAAIC,GAAJ,CAAQ,SAAR,EAAmBsB,4BAAnB,EAAiC,UAACrB,GAAD,EAAMC,GAAN,EAAc;AAC7CD,QAAI0B,MAAJ;AACAzB,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;AACD,GAHD;;AAKAL,MAAIC,GAAJ,CAAQ,KAAR,EAAesB,4BAAf,EAA6B,UAACrB,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIC,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqBT,IAAII,IAAzB;AACD,GAFD;;AAIA,SAAON,GAAP;AACD,C","file":"caraccount.js","sourcesContent":["import  mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Account from '../model/carAccount';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\n\nimport {generateAccessToken, respond, authenticate} from '../middleware/authMiddleware';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // '/v1/carAccount'\n  api.get('/', (req, res) => {\n    res.status(200).send({ user: req.user });\n  });\n\n  // '/v1/carAccount/getall' ** REMOVE AFTER DEV\n  api.get('/getall', (req, res) => {\n    Account.find({}, (err, accounts) => {\n      if (err) {\n        send(err);\n      }\n      res.json(accounts);\n    });\n  });\n\n  // '/v1/carAccount/register'\n  api.post('/register', (req, res) => {\n    Account.register(new Account({ username: req.body.email}), req.body.password, function(err, account) {\n      if (err) {\n        if (err.name === \"UserExistsError\") {\n          console.log(\"User Exists\");\n          return res.status(409).send(err);\n        } else {\n          return res.status(500).send(err);\n        }\n      }\n\n      passport.authenticate(\n        'local', {\n          session: false\n      })(req, res, () => {\n        res.status(200).send('Successfully created new account');\n      });\n    });\n  });\n\n  // '/v1/carAccount/login'\n  api.post('/login', passport.authenticate(\n    'local', {\n      session: false,\n      scope: []\n    }), generateAccessToken, respond);\n\n  // '/v1/carAccount/logout'\n  api.get('/logout', authenticate, (req, res) => {\n    req.logout();\n    res.status(200).send('Successfully logged out');\n  });\n\n  api.get('/me', authenticate, (req, res) => {\n    res.status(200).json(req.user);\n  });\n\n  return api;\n}\n"]}
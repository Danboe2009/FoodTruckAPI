{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","get","req","res","FoodTruck","find","err","foodtrucks","send","json","findById","params","id","foodtruck","post","authenticate","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","lat","long","save","message","delete","status","remove","_id","Review","review","put","newReview","title","text","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/foodtruck' - GET all food trucks\n  api.get('/', (req, res) => {\n    FoodTruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n  // '/v1/foodtruck/:id' - GET a specific food truck\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // '/v1/foodtruck/add' - POST - add a food truck\n  api.post('/add', authenticate, (req, res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n    newFoodTruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n\n    newFoodTruck.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Food Truck saved successfully' });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - DELETE - remove a food truck\n  api.delete('/:id', authenticate, (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (foodtruck === null) {\n        res.status(404).send(\"FoodTruck Not Found\")\n        return;\n      }\n      FoodTruck.remove({\n        _id: req.params.id\n      }, (err, foodtruck) => {\n        if (err) {\n          res.status(500).send(err);\n          return;\n        }\n        Review.remove({\n          foodtruck: req.params.id\n        }, (err, review) => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({message: \"Food Truck and Reviews Successfully Removed\"});\n        });\n      });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - PUT - update an existing record\n  api.put('/:id', authenticate, (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      foodtruck.name = req.body.name;\n      foodtruck.foodtype = req.body.foodtype;\n      foodtruck.avgcost = req.body.avgcost;\n      foodtruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n      foodtruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n      foodtruck.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Food Truck info updated' });\n      });\n    });\n  });\n\n  // add a review by a specific foodtruck id\n  // '/v1/foodtruck/reviews/add/:id'\n  api.post('/reviews/add/:id', authenticate, (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Food truck review saved' });\n        });\n      });\n    });\n  });\n\n  // get reviews for a specific foodtruck id\n  // '/v1/foodtruck/reviews/:id'\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({foodtruck: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n  return api;\n}\n"]}